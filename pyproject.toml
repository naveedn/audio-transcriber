[project]
name = "transcribe"
version = "0.1.0"
description = "CLI-based speech-to-text transcription application optimized for Apple Silicon"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "librosa>=0.10.0",
    "numpy>=1.24.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "silero-vad>=5.0.0",
    "mlx-whisper>=0.1.0 ; platform_system != 'Windows'",
    "ffmpeg-python>=0.2.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "aiofiles>=23.0.0",
    "tiktoken>=0.11.0",
    "nest-asyncio>=1.6.0",
    "openai-whisper>=20250625",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
]

[project.scripts]
transcribe = "src.main:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "D", "UP", "YTT", "ANN", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "COM812"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
]
