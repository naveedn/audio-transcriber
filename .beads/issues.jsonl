{"id":"audio-transcriber-1","title":"Refactor pipeline orchestrator for lint compliance","description":"## Context\nRuff reports multiple violations in `src/main.py` (C901, PLR0911, PLR0912) and numerous lint issues (bare exceptions, inline imports, timezone handling).\n\n## Scope\n- Break up `PipelineManager.bootstrap` and downstream stage handlers to satisfy complexity/branching limits.\n- Lift runtime imports to module scope or document unavoidable cases.\n- Replace bare exception handling and boolean positional arguments.\n- Normalize logging (lazy formatting) and ensure datetime usage is timezone-aware.\n\n## Notes\nAddressing this will require larger structural refactors beyond quick fixes.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T01:13:04.437008-04:00","updated_at":"2025-10-17T01:13:04.437008-04:00"}
{"id":"audio-transcriber-2","title":"Refactor VAD processing module for lint compliance","description":"## Context\n`src/vad_timestamp.py` still triggers high-complexity and logging lint errors (C901, PLR0912/PLR0915, S603, BLE001, logging f-strings, top-level imports). Addressing these requires restructuring async/sync flow, extracting helpers, and clarifying dependency checks.\n\n## Scope\n- Decompose `process_audio_file` and related routines to reduce branching and statement counts.\n- Move dynamic imports to module scope or explain necessity.\n- Replace hand-rolled subprocess calls and bare exceptions with safer patterns that satisfy Ruff security rules.\n- Convert logging to lazy formatting and ensure file I/O uses `Path.open()`.\n\n## Notes\nExpect follow-up updates to tests or fixtures once the VAD pipeline APIs shift.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T01:13:10.071324-04:00","updated_at":"2025-10-17T01:13:10.071324-04:00"}
{"id":"audio-transcriber-3","title":"Refactor Whisper transcription module for lint compliance","description":"## Context\n`src/whisper_transcribe.py` continues to fail Ruff checks (C901, PLR0912/PLR0915, BLE001, G004, unused imports). The module mixes sync and async logic, relies on dynamic imports, and uses direct file handles.\n\n## Scope\n- Split large coroutine helpers and reduce branching to satisfy complexity metrics.\n- Centralize import handling (mlx_whisper, whisper, librosa) and guard with capability checks instead of bare exceptions.\n- Replace bare/blanket exception handlers and ensure logging uses lazy formatting.\n- Switch to `Path.open()` for file operations and clarify optional arguments like `task_id` typing.\n\n## Notes\nRefactor will likely touch transcription orchestration tests once lint errors are removed.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T01:13:15.706236-04:00","updated_at":"2025-10-17T01:13:15.706236-04:00"}
